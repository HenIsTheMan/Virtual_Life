<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_characterStill</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bounce = 0;
state = noone;
jewels = 0;
jewelsAdded = 0;
jewelsToBeAdded = 0;
eq = 0;
hp = 30;
hSpeed = 0;
vSpeed = 0;
zoomScale = 1;

global.thingsQuick = array_create(36);
global.countQuick = array_create(36);

for(r = 0;r &lt; 7;r++){
    for(c = 0;c &lt; 15;c++){
        global.thingsInv[c,r] = noone;
        global.countInv[c,r] = 0;
    }
}

global.thingsQuick[2] = obj_ball;
global.countQuick[2] = 100;
global.thingsQuick[3] = obj_spawner;
global.countQuick[3] = 100;
global.thingsQuick[4] = obj_homingMissile;
global.countQuick[4] = 999;
global.thingsQuick[5] = obj_infectiousSoil;
global.countQuick[5] = 100;
global.thingsQuick[6] = obj_chomper;
global.countQuick[6] = 100;
global.thingsQuick[7] = obj_platform;
global.countQuick[7] = 100;
global.thingsQuick[8] = obj_explodingMole;
global.countQuick[8] = 100;
global.thingsQuick[9] = obj_bomb;
global.countQuick[9] = 100;
global.thingsQuick[10] = obj_soil;
global.countQuick[10] = 999;

keyPress[0] = ord('0');
keyPress[1] = ord('1');
keyPress[2] = ord('2');
keyPress[3] = ord('3');
keyPress[4] = ord('4');
keyPress[5] = ord('5');
keyPress[6] = ord('6');
keyPress[7] = ord('7');
keyPress[8] = ord('8');
keyPress[9] = ord('9');
keyPress[10] = ord("Z");
keyPress[11] = ord("X");

inv = 0;
on = 0;
page = 0;
onColumn = 0;
onRow = 0;
drawOnCursor = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(jewelsAdded &lt; jewelsToBeAdded){
    jewels++;
    jewelsAdded++;
    alarm[0] = 0.1 * 1000000/delta_time;
} else{
    jewelsAdded = 0;
    jewelsToBeAdded = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movement and collisions
xPos = device_mouse_x_to_gui(0) * (mouse_check_button(mb_left) &amp;&amp; point_in_rectangle(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),0,608,152,608+76)) div 76 * 76 + 38 * !(mouse_check_button(mb_left) &amp;&amp; point_in_rectangle(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),0,608,152,608+76));
a = keyboard_check(ord("A")) || xPos &lt; 38;
b = keyboard_check(ord("D")) || xPos &gt; 38;
c = keyboard_check(ord("W")) || (mouse_check_button(mb_left) &amp;&amp; point_in_circle(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),1102,646,38));
d = keyboard_check_pressed(ord("W")) || (mouse_check_button_pressed(mb_left) &amp;&amp; point_in_circle(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),1102,646,38));

image_speed = delta_time/1000000;

if(b - a != 0){
    sprite_index = spr_characterMove;
    image_xscale = b - a;
    hSpeed += 25;
}

if(!place_free(x,y+1) &amp;&amp; d){
    vSpeed = -600;
} else{
    vSpeed += 20;
}
if(vSpeed &lt; 0 &amp;&amp; !c){
    vSpeed = 0; 
}

hSpeed = clamp(hSpeed,-400,400);
vSpeed = clamp(vSpeed,-600,400);
deltaTime = min(delta_time,1000000/30);

//phase (can be upgraded)
if(!place_free(x,y+1) &amp;&amp; (keyboard_check(ord("S")) || (mouse_check_button(mb_left) &amp;&amp; point_in_circle(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),1178,646,38)))){
    vSpeed = 100;
}

if(mouse_check_button_pressed(mb_middle) &amp;&amp; !place_free(x+(b - a),y) &amp;&amp; place_free(x+76*(b - a),y) &amp;&amp; path_index == -1){
    path = path_add();
    path_add_point(path,x,y,100);
    path_add_point(path,x+76*(b - a),y,100);
    path_set_closed(path,false);
    path_start(path,round(200*deltaTime/1000000),"",true); 
}

if(mouse_check_button_pressed(mb_middle) &amp;&amp; !place_free(x,y+sign(vSpeed)) &amp;&amp; place_free(x,y+76*sign(vSpeed)) &amp;&amp; path_index == -1 &amp;&amp; (vSpeed = 100 || vSpeed &lt; 0)){
    path = path_add();
    path_add_point(path,x,y,100);
    path_add_point(path,x,y+76*sign(vSpeed),100);
    path_set_closed(path,false);
    path_start(path,round(200*deltaTime/1000000),"",true); 
}

if(bounce &amp; 1){
    state = states.bounce;
} else{
    speed = 0;
}

if(hp &lt;= 0 || place_meeting(x+(b - a),y,obj_lava) || place_meeting(x,y+sign(vSpeed),obj_lava)){
    state = states.die;
}

switch(state){
    case states.bounce: scr_character_bounce(); state = noone; break;
    case states.die: scr_character_die(); break;
    case noone: scr_character_normal(); break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///rangeBoxes
for(xOffset = -76;xOffset &lt; 114;xOffset += 38){
    for(yOffset = -76;yOffset &lt; 114;yOffset += 38){
        if(instance_number(obj_rangeBox) &lt; 25){
            rangeBoxCreate = instance_create(x div 38 * 38 + xOffset,y div 38 * 38 + yOffset,obj_rangeBox);
            rangeBoxCreate.xOffset = xOffset;
            rangeBoxCreate.yOffset = yOffset;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///view
if(keyboard_check_pressed(vk_shift)){
    switch(window_get_fullscreen()){
        case true: window_set_fullscreen(false); break;
        case false: window_set_fullscreen(true); break;
    }
}

if(mouse_wheel_up() &amp;&amp; zoomScale &gt; 0.5){
    zoomScale -= 38/608;
}
if(mouse_wheel_down() &amp;&amp; zoomScale &lt; 2){
    zoomScale += 38/608;
}

view_wview = 608 * zoomScale;
view_hview = 342 * zoomScale;

//follow
view_xview = x - view_wview/2;
view_yview = y - view_hview/2;

//cap view
view_xview = clamp(view_xview,0,room_width-view_wview);
view_yview = clamp(view_yview,0,room_height-view_hview);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///others
if(point_in_rectangle(display_mouse_get_x(),display_mouse_get_y(),window_get_x(),window_get_y(),window_get_x()+window_get_width(),window_get_y()+window_get_height())){
    cursor_sprite = spr_cursor;
} else{
    cursor_sprite = -1;
}

if(keyboard_check_pressed(vk_left) &amp;&amp; page &gt; 0){
    page--;
    if(!drawOnCursor){
        on = 12*page;
    }
}
if(keyboard_check_pressed(vk_right) &amp;&amp; page &lt; 2){
    page++;
    if(!drawOnCursor){
        on = 12*page;
    }
}

if(keyboard_check_pressed(ord("I"))){
    inv++;
}

if(keyboard_check_pressed(ord("B"))){
    bounce++;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///miscellaneous GUI
for(i = 0;i &lt; hp;i++){
    draw_sprite(spr_heart,0,38*i,0);
}

draw_sprite(spr_jewel,0,1216-38,0);
draw_text(1216-38,10,jewels);
draw_sprite_ext(spr_buttons,0,1064,608,1,1,0,-1,0.3 * !(mouse_check_button(mb_left) &amp;&amp; point_in_circle(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),1102,646,38)) + 0.7);
draw_sprite_ext(spr_buttons,1,1140,608,1,1,0,-1,0.3 * !(mouse_check_button(mb_left) &amp;&amp; point_in_circle(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),1178,646,38)) + 0.7);
draw_sprite(spr_moveBar,0,0,608);
draw_sprite(spr_moveBall,0,xPos,608); 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///quick slots
for(i = 12*page;i &lt; 12*page+12;i++){
    draw_sprite(spr_slot,0,152+76*(i-12*page),608);
    if(keyboard_check_pressed(keyPress[i-12*page])){
        on = i;
    }
    if(point_in_rectangle(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),152+76*(i-12*page),608,152+76*(i-12*page)+76,608+76)){
        if(mouse_check_button_pressed(mb_any)){
            on = i;
        }
        if(mouse_check_button_pressed(mb_right) &amp;&amp; on % 12 &lt; 2){
            global.countQuick[on]++;
        }
        if(mouse_check_button_released(mb_right) &amp;&amp; i % 12 &gt; 1 &amp;&amp; on % 12 &gt; 1){
            storeThings = global.thingsQuick[on];
            storeCount = global.countQuick[on];
            global.thingsQuick[on] = global.thingsQuick[i];
            global.countQuick[on] = global.countQuick[i];
            global.thingsQuick[i] = storeThings;
            global.countQuick[i] = storeCount;
            on = i;
        }
    }
    if(on % 12 &gt; 1 &amp;&amp; global.countQuick[on] == 0){
        global.thingsQuick[on] = 0;
        on = 12*page;
    }
    if(on div 12 == page){
        draw_sprite(spr_slot,1,152+76*(on-12*page),608);
    }
    if(i % 12 &lt; 2){
        if(global.countQuick[i] &amp; 1){
            draw_sprite_stretched(spr_actions,(i-12*page)*2+1,152+76*(i-12*page)+9.5,608+9.5,57,57);
        } else{
            draw_sprite_stretched(spr_actions,(i-12*page)*2,152+76*(i-12*page)+9.5,608+9.5,57,57);
        }
    }
    if(i % 12 &gt; 1 &amp;&amp; global.countQuick[i] != 0){
        draw_sprite_stretched(object_get_sprite(global.thingsQuick[i]),0,152+76*(i-12*page)+10.25,608+14.75,57,57); 
        draw_set_halign(fa_center);
        draw_text(152+76*(i-12*page)+38,608,global.countQuick[i]);
    }
    if(mouse_check_button_pressed(mb_right) &amp;&amp; global.thingsQuick[on] != 0 &amp;&amp; point_in_rectangle(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),152+76*(on-12*page),608,152+76*(on-12*page)+76,608+76)){
        drawOnCursor = 1;
    } else if(mouse_check_button_released(mb_right)){
        drawOnCursor = 0;
        if(on div 12 != page &amp;&amp; !point_in_rectangle(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),304,608,304+76*10,608+76)){
            on = 12*page;
        }
    }
    if(drawOnCursor &amp;&amp; point_in_rectangle(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),152,608,152+76*12,608+76)){
        draw_sprite_stretched(object_get_sprite(global.thingsQuick[on]),0,device_mouse_x_to_gui(0)-57/2,device_mouse_y_to_gui(0)-57/2,57,57);     
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///inv
if(inv &amp; 1){
    for(r = 0;r &lt; 7;r++){ //limit on rows
        for(c = 0;c &lt; 15;c++){ //limit on columns
            draw_sprite(spr_slot,0,38+76*c,47+76*r);
            if(global.countInv[c,r] != 0){
                draw_sprite_stretched(object_get_sprite(global.thingsInv[c,r]),0,38+76*c+14,47+76*r+17,76/1.5,76/1.5);
                if(global.countInv[c,r] &gt; 1){
                    draw_set_halign(fa_center);
                    draw_text(38+76*c+38,47+76*r,global.countInv[c,r]);
                }
            }
            if(mouse_check_button_pressed(mb_left) &amp;&amp; point_in_rectangle(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),38+76*c,47+76*r,38+76*c+76,47+76*r+76)){
                onColumn = c;
                onRow = r;
            }
            draw_sprite(spr_slot,1,38+76*onColumn,47+76*onRow);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///eq
draw_self();
if(keyboard_check_pressed(ord("P"))){
    eq++;
}

if(eq &amp; 1){
    draw_sprite(spr_wings,0,x,y);
    if(c){
        vSpeed = -400; //can be upgraded
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
