<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_character</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.wings = false;
global.jewels = 0;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movement
hLeft = mouse_check_button(mb_left);
pLeft = mouse_check_button_pressed(mb_left);
rLeft = mouse_check_button_released(mb_left);
leftButton = point_in_rectangle(window_mouse_get_x(),window_mouse_get_y(),obj_GUI.xPos[0],608,obj_GUI.xPos[0]+76,608+76);
rightButton = point_in_rectangle(window_mouse_get_x(),window_mouse_get_y(),obj_GUI.xPos[1],608,obj_GUI.xPos[1]+76,608+76);
jumpButton = point_in_rectangle(window_mouse_get_x(),window_mouse_get_y(),obj_GUI.xPos[2],608,obj_GUI.xPos[2]+76,608+76);
a = keyboard_check(vk_left) or leftButton &amp;&amp; hLeft;
b = keyboard_check(vk_right) or rightButton &amp;&amp; hLeft;
c = keyboard_check(vk_up) or jumpButton &amp;&amp; hLeft;
d = keyboard_check(vk_down);
e = keyboard_check_pressed(vk_left);
f = keyboard_check_pressed(vk_right);
g = keyboard_check_pressed(vk_up) or pLeft &amp;&amp; jumpButton;
h = keyboard_check_pressed(vk_down);
i = keyboard_check_released(vk_left) or leftButton &amp;&amp; pLeft;
j = keyboard_check_released(vk_right) or rightButton &amp;&amp; pLeft;
k = keyboard_check_released(vk_up) or rLeft &amp;&amp; jumpButton;
l = keyboard_check_released(vk_down);

//horizontal movement
if(place_free(x-1,y) &amp;&amp; a &amp;&amp; !b){
    if(image_index = 0){
        image_index = 1;
    } else{
    hspeed -= 1;
    }
} 
if(place_free(x+1,y) &amp;&amp; !a &amp;&amp; b){
    if(image_index = 1){
        image_index = 0;
    } else{
    hspeed += 1;
    }
}

hspeed = clamp(hspeed,-6,6);

if(i &amp;&amp; !b or j &amp;&amp; !a or a &amp;&amp; f or b &amp;&amp; e or e &amp;&amp; f or !a &amp;&amp; !b){
    hspeed = 0;
}

//jump
if(!place_free(x,y+1) &amp;&amp; g){
    vspeed -= 12;
} else if(vspeed &lt; 10){
    vspeed += 0.5;
}

//var jump
if(vspeed &lt; 0 &amp;&amp; k){
    vspeed = 0; 
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collisions
if(place_meeting(x+hspeed,y+vspeed,obj_lava)){
    x = xstart;
    y = ystart;
} else{
    if(!place_free(x+hspeed,y)){
        while(place_free(x+sign(hspeed),y)){
            x += sign(hspeed);
        }
        hspeed = 0;
    }
    if(!place_free(x,y+vspeed)){
        while(place_free(x,y+sign(vspeed))){
            y += sign(vspeed);
        }
        vspeed = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///eq
if(keyboard_check_pressed(ord("W")) &amp;&amp; !global.wings){
    global.wings = true;
    return 0;
}
if(keyboard_check_pressed(ord("W")) &amp;&amp; global.wings){
    global.wings = false;
    return 0;
}

/*if(keyboard_check_pressed(ord("G")) &amp;&amp; !global.gun){
    global.gun = true;
    return 0;
}
if(keyboard_check_pressed(ord("G")) &amp;&amp; global.gun){
    global.gun = false;
    return 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(window_get_fullscreen()){
    window_set_fullscreen(false);
} else{
    window_set_fullscreen(true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///eq
draw_self();
if(global.wings){
    draw_sprite(spr_wings,0,x,y);
    if(c){
        vspeed = -8;
    }
}

/*if(global.gun){
    draw_sprite(spr_gun,0,x,y);
    if(keyboard_check_pressed(vk_space) &amp;&amp; alarm[0] == -1){
        instance_create(x,y,obj_bullet);
        alarm[0] = 10;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
