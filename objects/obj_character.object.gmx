<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_characterStill</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.jewels = 0;
eq = 0;
hp = 30;
image_speed = 0.1;
hSpeed = 0;
vSpeed = 0;
zoomScale = 1;
dieBlocks[0] = obj_lava;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movement and collisions
a = keyboard_check(ord("A")) or obj_GUI.xPos &lt; 38;
b = keyboard_check(ord("D")) or obj_GUI.xPos &gt; 38;
c = keyboard_check(ord("W")) or (mouse_check_button(mb_left) &amp;&amp; point_in_circle(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),1102,646,38));
d = keyboard_check_pressed(ord("W")) or (mouse_check_button_pressed(mb_left) &amp;&amp; point_in_circle(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),1102,646,38));
e = keyboard_check_released(ord("W")) or (mouse_check_button_released(mb_left) &amp;&amp; point_in_circle(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0),1102,646,38));

if(b - a != 0){
    sprite_index = spr_characterMove;
    image_xscale = b - a;
    hSpeed += 25;
}

if(!place_free(x,y+1) &amp;&amp; d){
    vSpeed = -600;
} else{
    vSpeed += 20;
}

//var jump
if(vSpeed &lt; 0 &amp;&amp; e){
    vSpeed = 0; 
}

hSpeed = clamp(hSpeed,-400,400);
vSpeed = clamp(vSpeed,-600,400);

for(i = 0;i &lt; array_length_1d(dieBlocks);i++){
    if(hp &lt;= 0 or place_meeting(x+hSpeed*(b - a)*(delta_time/1000000),y+vSpeed*(delta_time/1000000),dieBlocks[i])){
        x = xstart;
        y = ystart;
        hp = 30;
    } else{
        if(!place_free(x+hSpeed*(b - a)*(delta_time/1000000),y)){
            while(place_free(x + (b - a)/3,y)){
                x += (b - a)/6;
            }
            hSpeed = 0;
            sprite_index = spr_characterStill;
        } else{
            x += hSpeed*(b - a)*(delta_time/1000000);
        }
        if(!place_free(x,y+vSpeed*(delta_time/1000000))){
            while(place_free(x,y+sign(vSpeed)/3)){
                y += sign(vSpeed)/6;
            }
            vSpeed = 0;
        } else{
            y += vSpeed*(delta_time/1000000);
        }
    }
}

//stay within room
x = clamp(x,19-5,room_width-19+5);
y = clamp(y,19-2,room_height-19);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///rangeBoxes
for(xChange = -2;xChange &lt; 3;xChange++){
    for(yChange = -2;yChange &lt; 3;yChange++){
        if(instance_number(obj_rangeBox) &lt; 25){
            rangeBoxCreate = instance_create(((x+(xChange*38)) div 38)*38,((y+(yChange*38)) div 38)*38,obj_rangeBox);
            rangeBoxCreate.xPos = xChange;
            rangeBoxCreate.yPos = yChange;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///view
if(keyboard_check_pressed(vk_shift)){
    switch(window_get_fullscreen()){
        case true: window_set_fullscreen(false); break;
        case false: window_set_fullscreen(true); break;
    }
}

if(mouse_wheel_up() &amp;&amp; zoomScale &gt; 0.5){
    zoomScale -= 38/608;
}
if(mouse_wheel_down() &amp;&amp; zoomScale &lt; 2){
    zoomScale += 38/608;
}

view_wview = 608 * zoomScale;
view_hview = 342 * zoomScale;

//follow obj_character
view_xview = obj_character.x - view_wview/2;
view_yview = obj_character.y - view_hview/2;

//cap view
view_xview = clamp(view_xview,0,room_width-view_wview);
view_yview = clamp(view_yview,0,room_height-view_hview);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///eq
draw_self();
if(keyboard_check_pressed(ord("P"))){
    eq++;
}

if(eq &amp; 1){
    draw_sprite(spr_wings,0,x,y);
    if(c){
        vSpeed = -400; //can be upgraded
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
